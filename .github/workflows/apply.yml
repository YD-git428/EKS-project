name: Deploy EKS Infrastructure + Install Helm
on:
    workflow_run:
         workflows: ["Build and push docker image to ECR"]  
         types:
             - completed
   



jobs:
  deploy:

    runs-on: ubuntu-latest


    steps:

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure-AWS-credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Set up Kubernetes
      uses: azure/setup-kubectl@v4
      with:
          version: 'latest'

    - name: Set up Helm
      uses: azure/setup-helm@v4.2.0
      with:
          version: 'latest'


    - name: Terraform Init
      run: |
        cd terraform
        terraform init

    - name: Terraform Format
      run: |
        cd terraform
        terraform fmt --recursive

    - name: Terraform Plan
      run: |
        cd terraform
        terraform plan -refresh=true -input=false
      continue-on-error: false

    - name: Terraform Apply 
      run: |
        cd terraform
        terraform apply -auto-approve
        echo "Ignore error - Kubeconfig will be updated under the created cluster" 
      continue-on-error: true

    - name: Allow GitHub Actions IP in EKS
      run: |
         GITHUB_IP=$(curl -s https://checkip.amazonaws.com)
         aws eks update-cluster-config --region ${{ secrets.AWS_REGION }} --name YoucefEKS-project \
         --resources-vpc-config endpointPublicAccess=true,publicAccessCidrs=["$GITHUB_IP/32",${{ secrets.PUBLIC_IP_CIDR }}]
   
    - name: Terraform Apply 
      run: |
           cd terraform
           terraform apply -auto-approve
      continue-on-error: false

    - name: Update kube config
      run: aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name YoucefEKS-project

    - name: Apply issuer 
      run: kubectl apply -f terraform/issuer/cluster-issuer.yml
    
    - name: Apply argo-cd app
      run: kubectl apply -f terraform/argo-cd-application/apps-argo.yml
